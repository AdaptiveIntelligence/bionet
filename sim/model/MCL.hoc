
//  ******************************************************
//
//     File generated by: neuroConstruct v1.7.0
//
//     Generally replicates hoc for Cell Type as exported from
//     NEURON's Cell Builder, together with some neuroConstruct
//     specific helper/info procedures, e.g. toString(), netInfo()
//
//  ******************************************************


begintemplate MCL

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target


//  Some fields for referencing the cells

public reference, type, description, name
strdef reference, type, description, name


//  Some methods for referencing the cells

public toString, netInfo

public all

objref synlist
objref all
objref stringFuncs

public soma_group
objref soma_group
public axon_group
objref axon_group
public dendrite_group
objref dendrite_group

proc init() {
    topol()
    subsets()
    geom()
    biophys()
    geom_nseg()
    synlist = new List()
    x = y = z = 0
    reference = $s1
    type = $s2
    description = $s3
    
    strdef indexNum
    stringFuncs = new StringFunctions()
    stringFuncs.tail(reference, "_", indexNum)
    while (stringFuncs.substr( indexNum, "_")>=0) {
        stringFuncs.tail(indexNum, "_", indexNum)
    }
    
    sprint(name, "%s", type)
}

create Soma
public Soma
create Axon
public Axon
create Dendrite2
public Dendrite2
create Neurite3
public Neurite3
create Neurite4
public Neurite4

proc topol() {
    connect Axon(0), Soma(1.0)
    connect Dendrite2(0), Soma(1.0)
    connect Neurite3(0), Axon(1.0)
    connect Neurite4(0), Axon(1.0)
    basic_shape()
}

proc basic_shape() {

//  Looking at segment number 0: Seg0_soma_0, section: Soma, SPHERICAL, ID: 0, ROOT SEGMENT, rad: 1.9448651, (3.2, -296.15, 52.3) -> (3.2, -296.15, 52.3)
    Soma {pt3dclear() pt3dadd(3.2, -298.09485, 52.3, 3.8897302) pt3dadd(3.2, -294.20514, 52.3, 3.8897302)}

//  Looking at segment number 1: Seg0_axon_0, section: Axon, ID: 1, parent: Seg0_soma_0 (0), rad: 0.28284273, (3.2, -296.15, 52.3) -> (3.2, -294.8, 52.3), len: 1.35001
    Axon {pt3dclear() pt3dadd(3.2, -296.15, 52.3, 0.56568545) pt3dadd(3.2, -294.8, 52.3, 0.56568545)}

//  Looking at segment number 2: Seg2_axon_0, section: Axon, ID: 2, parent: Seg0_axon_0 (1), rad: 0.28722814, (3.2, -294.8, 52.3) -> (2.8999999, -292.85, 52.100002), len: 1.98303
    Axon {pt3dadd(2.8999999, -292.85, 52.100002, 0.5744563)}

//  Looking at segment number 3: Seg3_axon_0, section: Axon, ID: 3, parent: Seg2_axon_0 (2), rad: 0.28722814, (2.8999999, -292.85, 52.100002) -> (2.6000001, -291.15, 52.0), len: 1.72917
    Axon {pt3dadd(2.6000001, -291.15, 52.0, 0.5744563)}

//  Looking at segment number 4: Seg4_axon_0, section: Axon, ID: 4, parent: Seg3_axon_0 (3), rad: 0.28831407, (2.6000001, -291.15, 52.0) -> (2.55, -290.775, 52.3), len: 0.48283
    Axon {pt3dadd(2.55, -290.775, 52.3, 0.57662815)}

//  Looking at segment number 5: Seg5_axon_0, section: Axon, ID: 5, parent: Seg4_axon_0 (4), rad: 0.25495097, (2.55, -290.775, 52.3) -> (2.25, -290.7, 53.45), len: 1.19085
    Axon {pt3dadd(2.25, -290.7, 53.45, 0.50990194)}

//  Looking at segment number 6: Seg6_axon_0, section: Axon, ID: 6, parent: Seg5_axon_0 (5), rad: 0.2915476, (2.25, -290.7, 53.45) -> (1.25, -290.59998, 54.949997), len: 1.80555
    Axon {pt3dadd(1.25, -290.59998, 54.949997, 0.5830952)}

//  Looking at segment number 7: Seg7_axon_0, section: Axon, ID: 7, parent: Seg6_axon_0 (6), rad: 0.28722814, (1.25, -290.59998, 54.949997) -> (-0.25, -290.5, 55.9), len: 1.77834
    Axon {pt3dadd(-0.25, -290.5, 55.9, 0.5744563)}

//  Looking at segment number 8: Seg8_axon_0, section: Axon, ID: 8, parent: Seg7_axon_0 (7), rad: 0.28284273, (-0.25, -290.5, 55.9) -> (-2.0, -290.5, 56.300003), len: 1.79513
    Axon {pt3dadd(-2.0, -290.5, 56.300003, 0.56568545)}

//  Looking at segment number 9: Seg9_axon_0, section: Axon, ID: 9, parent: Seg8_axon_0 (8), rad: 0.3, (-2.0, -290.5, 56.300003) -> (-3.7, -290.5, 55.9), len: 1.74643
    Axon {pt3dadd(-3.7, -290.5, 55.9, 0.6)}

//  Looking at segment number 10: Seg10_axon_0, section: Axon, ID: 10, parent: Seg9_axon_0 (9), rad: 0.33541018, (-3.7, -290.5, 55.9) -> (-4.8, -290.55, 55.299995), len: 1.254
    Axon {pt3dadd(-4.8, -290.55, 55.299995, 0.67082036)}

//  Looking at segment number 11: Seg0_dendrit_2, section: Dendrite2, ID: 26, parent: Seg0_soma_0 (0), rad: 0.28284273, (3.2, -296.15, 52.3) -> (3.2, -297.5, 52.3), len: 1.35001
    Dendrite2 {pt3dclear() pt3dadd(3.2, -296.15, 52.3, 0.56568545) pt3dadd(3.2, -297.5, 52.3, 0.56568545)}

//  Looking at segment number 12: Seg27_dendrite_0, section: Dendrite2, ID: 27, parent: Seg0_dendrit_2 (26), rad: 0.28284273, (3.2, -297.5, 52.3) -> (3.2, -299.8, 52.7), len: 2.33451
    Dendrite2 {pt3dadd(3.2, -299.8, 52.7, 0.56568545)}

//  Looking at segment number 13: Seg28_dendrite_0, section: Dendrite2, ID: 28, parent: Seg27_dendrite_0 (27), rad: 0.26925823, (3.2, -299.8, 52.7) -> (3.2, -304.69998, 53.45), len: 4.95706
    Dendrite2 {pt3dadd(3.2, -304.69998, 53.45, 0.53851646)}

//  Looking at segment number 14: Seg29_dendrite_0, section: Dendrite2, ID: 29, parent: Seg28_dendrite_0 (28), rad: 0.26925823, (3.2, -304.69998, 53.45) -> (3.2, -305.95, 54.9), len: 1.91444
    Dendrite2 {pt3dadd(3.2, -305.95, 54.9, 0.53851646)}

//  Looking at segment number 15: Seg30_dendrite_0, section: Dendrite2, ID: 30, parent: Seg29_dendrite_0 (29), rad: 0.26925823, (3.2, -305.95, 54.9) -> (3.2, -306.45, 55.5), len: 0.781024
    Dendrite2 {pt3dadd(3.2, -306.45, 55.5, 0.53851646)}

//  Looking at segment number 16: Seg11_neurite_0, section: Neurite3, ID: 11, parent: Seg10_axon_0 (10), rad: 0.33726844, (-4.8, -290.55, 55.299995) -> (-4.975, -290.35, 55.175), len: 0.293669
    Neurite3 {pt3dclear() pt3dadd(-4.8, -290.55, 55.299995, 0.67082036) pt3dadd(-4.975, -290.35, 55.175, 0.6745369)}

//  Looking at segment number 17: Seg12_neurite_0, section: Neurite3, ID: 12, parent: Seg11_neurite_0 (11), rad: 0.20615529, (-4.975, -290.35, 55.175) -> (-5.0, -290.19998, 55.05), len: 0.196869
    Neurite3 {pt3dadd(-5.0, -290.19998, 55.05, 0.41231057)}

//  Looking at segment number 18: Seg13_neurite_0, section: Neurite3, ID: 13, parent: Seg12_neurite_0 (12), rad: 0.10606601, (-5.0, -290.19998, 55.05) -> (-5.025, -289.825, 54.7), len: 0.513543
    Neurite3 {pt3dadd(-5.025, -289.825, 54.7, 0.21213202)}

//  Looking at segment number 19: Seg14_neurite_0, section: Neurite3, ID: 14, parent: Seg13_neurite_0 (13), rad: 0.13462912, (-5.025, -289.825, 54.7) -> (-5.05, -288.9, 54.275), len: 1.01829
    Neurite3 {pt3dadd(-5.05, -288.9, 54.275, 0.26925823)}

//  Looking at segment number 20: Seg15_neurite_0, section: Neurite3, ID: 15, parent: Seg14_neurite_0 (14), rad: 0.15411034, (-5.05, -288.9, 54.275) -> (-5.05, -287.675, 54.125), len: 1.23416
    Neurite3 {pt3dadd(-5.05, -287.675, 54.125, 0.30822068)}

//  Looking at segment number 21: Seg16_neurite_0, section: Neurite3, ID: 16, parent: Seg15_neurite_0 (15), rad: 0.147902, (-5.05, -287.675, 54.125) -> (-5.075, -287.425, 54.125), len: 0.251247
    Neurite3 {pt3dadd(-5.075, -287.425, 54.125, 0.295804)}

//  Looking at segment number 22: Seg17_neurite_0, section: Neurite4, ID: 17, parent: Seg10_axon_0 (10), rad: 0.2915476, (-4.8, -290.55, 55.299995) -> (-5.15, -290.59998, 55.05), len: 0.433009
    Neurite4 {pt3dclear() pt3dadd(-4.8, -290.55, 55.299995, 0.67082036) pt3dadd(-5.15, -290.59998, 55.05, 0.5830952)}

//  Looking at segment number 23: Seg18_neurite_0, section: Neurite4, ID: 18, parent: Seg17_neurite_0 (17), rad: 0.28722814, (-5.15, -290.59998, 55.05) -> (-6.2, -290.7, 53.45), len: 1.91638
    Neurite4 {pt3dadd(-6.2, -290.7, 53.45, 0.5744563)}

//  Looking at segment number 24: Seg19_neurite_0, section: Neurite4, ID: 19, parent: Seg18_neurite_0 (18), rad: 0.28284273, (-6.2, -290.7, 53.45) -> (-6.6, -290.8, 51.7), len: 1.79791
    Neurite4 {pt3dadd(-6.6, -290.8, 51.7, 0.56568545)}

//  Looking at segment number 25: Seg20_neurite_0, section: Neurite4, ID: 20, parent: Seg19_neurite_0 (19), rad: 0.30103987, (-6.6, -290.8, 51.7) -> (-5.7999997, -290.925, 47.4), len: 4.37557
    Neurite4 {pt3dadd(-5.7999997, -290.925, 47.4, 0.60207975)}

//  Looking at segment number 26: Seg21_neurite_0, section: Neurite4, ID: 21, parent: Seg20_neurite_0 (20), rad: 0.31819806, (-5.7999997, -290.925, 47.4) -> (-5.7999997, -290.275, 45.025), len: 2.46234
    Neurite4 {pt3dadd(-5.7999997, -290.275, 45.025, 0.6363961)}

//  Looking at segment number 27: Seg22_neurite_0, section: Neurite4, ID: 22, parent: Seg21_neurite_0 (21), rad: 0.28722814, (-5.7999997, -290.275, 45.025) -> (-5.7999997, -289.85, 44.5), len: 0.675456
    Neurite4 {pt3dadd(-5.7999997, -289.85, 44.5, 0.5744563)}

//  Looking at segment number 28: Seg23_neurite_0, section: Neurite4, ID: 23, parent: Seg22_neurite_0 (22), rad: 0.28722814, (-5.7999997, -289.85, 44.5) -> (-5.7999997, -289.15, 44.5), len: 0.700012
    Neurite4 {pt3dadd(-5.7999997, -289.15, 44.5, 0.5744563)}

//  Looking at segment number 29: Seg24_neurite_0, section: Neurite4, ID: 24, parent: Seg23_neurite_0 (23), rad: 0.2839454, (-5.7999997, -289.15, 44.5) -> (-5.2999997, -286.375, 45.8), len: 3.10493
    Neurite4 {pt3dadd(-5.2999997, -286.375, 45.8, 0.5678908)}

//  Looking at segment number 30: Seg25_neurite_0, section: Neurite4, ID: 25, parent: Seg24_neurite_0 (24), rad: 0.3211308, (-5.2999997, -286.375, 45.8) -> (-5.35, -284.775, 45.699997), len: 1.60391
    Neurite4 {pt3dadd(-5.35, -284.775, 45.699997, 0.6422616)}
}

proc subsets() { local i


//  The group all is assumed never to change
    all = new SectionList()


    soma_group = new SectionList()

    Soma soma_group.append()


    axon_group = new SectionList()

    Axon axon_group.append()


    dendrite_group = new SectionList()

    Dendrite2 dendrite_group.append()
    Neurite3 dendrite_group.append()
    Neurite4 dendrite_group.append()


    Soma all.append()
    Axon all.append()
    Dendrite2 all.append()
    Neurite3 all.append()
    Neurite4 all.append()
}

proc geom() {
}

proc biophys() {
    forsec all cm = 1.0
    forsec all Ra = 30.0

    forsec all { 
//      Assuming parameters other than max cond dens are set in the mod file...

        insert LeakConductance  { gmax_LeakConductance = 2.5E-5 }  
//      Ion non_specific is used in this mechanism...


    }

}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1

}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}

proc connect2target() {   //$o1 target point process, $o2 returned NetCon


//  Using standard NetBuilder form. (Overly) simple assumption that first soma seg is trigger for AP...
//  Note: neuroConstruct does not use this func for creating connections (in serial mode!), but it can be useful when using generated files in NEURON's NetBuilder

    Soma $o2 = new NetCon(&v(1), $o1)
    print "connect2target called on ", name
}


//  This function is useful when checking what cells (aot sections) have been created. Run allcells() from nCtools.hoc...

proc toString() {
    strdef info
    sprint(info, "Cell ref: %s (%s), at: (%d, %d, %d)", reference, name, x, y, z)
    print info
}


//  This function is useful when checking network connections

proc netInfo() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s", reference, type)
    print "--------  ",info
    print "    There are ", synlist.count(), " connections in ", synlist
    for i=0,synlist.count()-1 {
        print "        Connection from ", synlist.o[i].precell, " to: ", synlist.o[i].postcell
        print "        Pre:   Weight: ", synlist.o[i].weight, ", delay: ", synlist.o[i].delay, ", threshold: ", synlist.o[i].threshold 
        print "        Post:  ", synlist.o[i].syn(), ", gmax: ", synlist.o[i].syn().gmax , ", e: ", synlist.o[i].syn().e , ", rise time: ", synlist.o[i].syn().tau_rise , ", decay time: ", synlist.o[i].syn().tau_decay 
    print " "
    }
    
    
    
    print "--------  "
    print " "
}


endtemplate MCL

