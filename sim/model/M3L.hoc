
//  ******************************************************
//
//     File generated by: neuroConstruct v1.7.0
//
//     Generally replicates hoc for Cell Type as exported from
//     NEURON's Cell Builder, together with some neuroConstruct
//     specific helper/info procedures, e.g. toString(), netInfo()
//
//  ******************************************************


begintemplate M3L

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target


//  Some fields for referencing the cells

public reference, type, description, name
strdef reference, type, description, name


//  Some methods for referencing the cells

public toString, netInfo

public all

objref synlist
objref all
objref stringFuncs

public soma_group
objref soma_group
public axon_group
objref axon_group
public dendrite_group
objref dendrite_group

proc init() {
    topol()
    subsets()
    geom()
    biophys()
    geom_nseg()
    synlist = new List()
    x = y = z = 0
    reference = $s1
    type = $s2
    description = $s3
    
    strdef indexNum
    stringFuncs = new StringFunctions()
    stringFuncs.tail(reference, "_", indexNum)
    while (stringFuncs.substr( indexNum, "_")>=0) {
        stringFuncs.tail(indexNum, "_", indexNum)
    }
    
    sprint(name, "%s", type)
}

create Soma
public Soma
create Axon
public Axon
create Neurite2
public Neurite2
create Neurite3
public Neurite3
create Neurite4
public Neurite4
create Neurite5
public Neurite5

proc topol() {
    connect Axon(0), Soma(1.0)
    connect Neurite2(0), Axon(1.0)
    connect Neurite3(0), Neurite2(1.0)
    connect Neurite4(0), Neurite2(1.0)
    connect Neurite5(0), Axon(1.0)
    basic_shape()
}

proc basic_shape() {

//  Looking at segment number 0: Seg0_soma_0, section: Soma, SPHERICAL, ID: 0, ROOT SEGMENT, rad: 2.1920311, (3.7500002, -295.4, 48.15) -> (3.7500002, -295.4, 48.15)
    Soma {pt3dclear() pt3dadd(3.7500002, -297.592, 48.15, 4.3840623) pt3dadd(3.7500002, -293.20798, 48.15, 4.3840623)}

//  Looking at segment number 1: Seg0_axon_0, section: Axon, ID: 1, parent: Seg0_soma_0 (0), rad: 0.28284273, (3.7500002, -295.4, 48.15) -> (3.7, -295.4, 48.2), len: 0.0707103
    Axon {pt3dclear() pt3dadd(3.7500002, -295.4, 48.15, 0.56568545) pt3dadd(3.7, -295.4, 48.2, 0.56568545)}

//  Looking at segment number 2: Seg2_axon_0, section: Axon, ID: 2, parent: Seg0_axon_0 (1), rad: 0.26925823, (3.7, -295.4, 48.2) -> (3.7, -295.8, 48.15), len: 0.403107
    Axon {pt3dadd(3.7, -295.8, 48.15, 0.53851646)}

//  Looking at segment number 3: Seg3_axon_0, section: Axon, ID: 3, parent: Seg2_axon_0 (2), rad: 0.28284273, (3.7, -295.8, 48.15) -> (3.7, -296.1, 48.899998), len: 0.807778
    Axon {pt3dadd(3.7, -296.1, 48.899998, 0.56568545)}

//  Looking at segment number 4: Seg4_axon_0, section: Axon, ID: 4, parent: Seg3_axon_0 (3), rad: 0.25495097, (3.7, -296.1, 48.899998) -> (3.7500002, -296.1, 49.95), len: 1.05119
    Axon {pt3dadd(3.7500002, -296.1, 49.95, 0.50990194)}

//  Looking at segment number 5: Seg5_neurite_0, section: Neurite2, ID: 5, parent: Seg4_axon_0 (4), rad: 0.23452078, (3.7500002, -296.1, 49.95) -> (3.7500002, -296.0, 50.15), len: 0.22361
    Neurite2 {pt3dclear() pt3dadd(3.7500002, -296.1, 49.95, 0.50990194) pt3dadd(3.7500002, -296.0, 50.15, 0.46904156)}

//  Looking at segment number 6: Seg6_neurite_0, section: Neurite2, ID: 6, parent: Seg5_neurite_0 (5), rad: 0.21213202, (3.7500002, -296.0, 50.15) -> (3.7500002, -295.6, 50.25), len: 0.412304
    Neurite2 {pt3dadd(3.7500002, -295.6, 50.25, 0.42426404)}

//  Looking at segment number 7: Seg7_neurite_0, section: Neurite2, ID: 7, parent: Seg6_neurite_0 (6), rad: 0.25, (3.7500002, -295.6, 50.25) -> (3.7500002, -294.19998, 50.199997), len: 1.40092
    Neurite2 {pt3dadd(3.7500002, -294.19998, 50.199997, 0.5)}

//  Looking at segment number 8: Seg8_neurite_0, section: Neurite3, ID: 8, parent: Seg7_neurite_0 (7), rad: 0.21213202, (3.7500002, -294.19998, 50.199997) -> (3.7500002, -294.05, 50.4), len: 0.25
    Neurite3 {pt3dclear() pt3dadd(3.7500002, -294.19998, 50.199997, 0.5) pt3dadd(3.7500002, -294.05, 50.4, 0.42426404)}

//  Looking at segment number 9: Seg9_neurite_0, section: Neurite3, ID: 9, parent: Seg8_neurite_0 (8), rad: 0.21213202, (3.7500002, -294.05, 50.4) -> (3.7500002, -294.05, 51.2), len: 0.799999
    Neurite3 {pt3dadd(3.7500002, -294.05, 51.2, 0.42426404)}

//  Looking at segment number 10: Seg10_neurite_0, section: Neurite4, ID: 10, parent: Seg7_neurite_0 (7), rad: 0.21213202, (3.7500002, -294.19998, 50.199997) -> (3.7500002, -293.9, 50.25), len: 0.304127
    Neurite4 {pt3dclear() pt3dadd(3.7500002, -294.19998, 50.199997, 0.5) pt3dadd(3.7500002, -293.9, 50.25, 0.42426404)}

//  Looking at segment number 11: Seg11_neurite_0, section: Neurite4, ID: 11, parent: Seg10_neurite_0 (10), rad: 0.21794495, (3.7500002, -293.9, 50.25) -> (3.7500002, -292.35, 49.75), len: 1.62864
    Neurite4 {pt3dadd(3.7500002, -292.35, 49.75, 0.4358899)}

//  Looking at segment number 12: Seg12_neurite_0, section: Neurite4, ID: 12, parent: Seg11_neurite_0 (11), rad: 0.23452078, (3.7500002, -292.35, 49.75) -> (3.7500002, -291.55, 48.899998), len: 1.16728
    Neurite4 {pt3dadd(3.7500002, -291.55, 48.899998, 0.46904156)}

//  Looking at segment number 13: Seg13_neurite_0, section: Neurite4, ID: 13, parent: Seg12_neurite_0 (12), rad: 0.7713624, (3.7500002, -291.55, 48.899998) -> (3.7500002, -291.25, 48.699997), len: 0.360545
    Neurite4 {pt3dadd(3.7500002, -291.25, 48.699997, 1.5427248)}

//  Looking at segment number 14: Seg14_neurite_0, section: Neurite4, ID: 14, parent: Seg13_neurite_0 (13), rad: 0.81547534, (3.7500002, -291.25, 48.699997) -> (3.7500002, -291.15, 47.9), len: 0.806222
    Neurite4 {pt3dadd(3.7500002, -291.15, 47.9, 1.6309507)}

//  Looking at segment number 15: Seg15_neurite_0, section: Neurite4, ID: 15, parent: Seg14_neurite_0 (14), rad: 0.6670832, (3.7500002, -291.15, 47.9) -> (3.7500002, -290.19998, 46.95), len: 1.34351
    Neurite4 {pt3dadd(3.7500002, -290.19998, 46.95, 1.3341664)}

//  Looking at segment number 16: Seg16_neurite_0, section: Neurite4, ID: 16, parent: Seg15_neurite_0 (15), rad: 0.21794495, (3.7500002, -290.19998, 46.95) -> (3.7500002, -290.15, 46.95), len: 0.0499878
    Neurite4 {pt3dadd(3.7500002, -290.15, 46.95, 0.4358899)}

//  Looking at segment number 17: Seg17_neurite_0, section: Neurite4, ID: 17, parent: Seg16_neurite_0 (16), rad: 0.18027757, (3.7500002, -290.15, 46.95) -> (3.7, -289.8, 46.85), len: 0.36743
    Neurite4 {pt3dadd(3.7, -289.8, 46.85, 0.36055514)}

//  Looking at segment number 18: Seg18_neurite_0, section: Neurite4, ID: 18, parent: Seg17_neurite_0 (17), rad: 0.14142136, (3.7, -289.8, 46.85) -> (2.1, -287.6, 46.6), len: 2.73174
    Neurite4 {pt3dadd(2.1, -287.6, 46.6, 0.28284273)}

//  Looking at segment number 19: Seg19_neurite_0, section: Neurite4, ID: 19, parent: Seg18_neurite_0 (18), rad: 0.18027757, (2.1, -287.6, 46.6) -> (0.4, -282.69998, 46.45), len: 5.18871
    Neurite4 {pt3dadd(0.4, -282.69998, 46.45, 0.36055514)}

//  Looking at segment number 20: Seg20_neurite_0, section: Neurite4, ID: 20, parent: Seg19_neurite_0 (19), rad: 0.14142136, (0.4, -282.69998, 46.45) -> (0.2, -282.2, 46.399998), len: 0.540805
    Neurite4 {pt3dadd(0.2, -282.2, 46.399998, 0.28284273)}

//  Looking at segment number 21: Seg21_neurite_0, section: Neurite5, ID: 21, parent: Seg4_axon_0 (4), rad: 0.21794495, (3.7500002, -296.1, 49.95) -> (3.7500002, -296.25, 50.25), len: 0.335407
    Neurite5 {pt3dclear() pt3dadd(3.7500002, -296.1, 49.95, 0.50990194) pt3dadd(3.7500002, -296.25, 50.25, 0.4358899)}

//  Looking at segment number 22: Seg22_neurite_0, section: Neurite5, ID: 22, parent: Seg21_neurite_0 (21), rad: 0.25, (3.7500002, -296.25, 50.25) -> (4.65, -297.19998, 51.5), len: 1.80969
    Neurite5 {pt3dadd(4.65, -297.19998, 51.5, 0.5)}

//  Looking at segment number 23: Seg23_neurite_0, section: Neurite5, ID: 23, parent: Seg22_neurite_0 (22), rad: 0.21794495, (4.65, -297.19998, 51.5) -> (4.75, -297.25, 52.249996), len: 0.758285
    Neurite5 {pt3dadd(4.75, -297.25, 52.249996, 0.4358899)}

//  Looking at segment number 24: Seg24_neurite_0, section: Neurite5, ID: 24, parent: Seg23_neurite_0 (23), rad: 0.21794495, (4.75, -297.25, 52.249996) -> (4.1499996, -296.35, 54.25), len: 2.27376
    Neurite5 {pt3dadd(4.1499996, -296.35, 54.25, 0.4358899)}

//  Looking at segment number 25: Seg25_neurite_0, section: Neurite5, ID: 25, parent: Seg24_neurite_0 (24), rad: 0.25980762, (4.1499996, -296.35, 54.25) -> (2.75, -295.65, 56.550003), len: 2.78209
    Neurite5 {pt3dadd(2.75, -295.65, 56.550003, 0.51961523)}

//  Looking at segment number 26: Seg26_neurite_0, section: Neurite5, ID: 26, parent: Seg25_neurite_0 (25), rad: 0.2926175, (2.75, -295.65, 56.550003) -> (0.425, -295.7, 57.7), len: 2.59434
    Neurite5 {pt3dadd(0.425, -295.7, 57.7, 0.585235)}

//  Looking at segment number 27: Seg27_neurite_0, section: Neurite5, ID: 27, parent: Seg26_neurite_0 (26), rad: 0.24494897, (0.425, -295.7, 57.7) -> (-0.5, -295.7, 57.6), len: 0.93039
    Neurite5 {pt3dadd(-0.5, -295.7, 57.6, 0.48989794)}

//  Looking at segment number 28: Seg28_neurite_0, section: Neurite5, ID: 28, parent: Seg27_neurite_0 (27), rad: 0.20615529, (-0.5, -295.7, 57.6) -> (-1.35, -295.7, 56.5), len: 1.39014
    Neurite5 {pt3dadd(-1.35, -295.7, 56.5, 0.41231057)}

//  Looking at segment number 29: Seg29_neurite_0, section: Neurite5, ID: 29, parent: Seg28_neurite_0 (28), rad: 0.21794495, (-1.35, -295.7, 56.5) -> (-1.35, -295.25, 56.15), len: 0.570096
    Neurite5 {pt3dadd(-1.35, -295.25, 56.15, 0.4358899)}

//  Looking at segment number 30: Seg30_neurite_0, section: Neurite5, ID: 30, parent: Seg29_neurite_0 (29), rad: 0.21213202, (-1.35, -295.25, 56.15) -> (-1.35, -294.4, 56.15), len: 0.850006
    Neurite5 {pt3dadd(-1.35, -294.4, 56.15, 0.42426404)}
}

proc subsets() { local i


//  The group all is assumed never to change
    all = new SectionList()


    soma_group = new SectionList()

    Soma soma_group.append()


    axon_group = new SectionList()

    Axon axon_group.append()


    dendrite_group = new SectionList()

    Neurite2 dendrite_group.append()
    Neurite3 dendrite_group.append()
    Neurite4 dendrite_group.append()
    Neurite5 dendrite_group.append()


    Soma all.append()
    Axon all.append()
    Neurite2 all.append()
    Neurite3 all.append()
    Neurite4 all.append()
    Neurite5 all.append()
}

proc geom() {
}

proc biophys() {
    forsec all cm = 1.0
    forsec all Ra = 30.0

    forsec all { 
//      Assuming parameters other than max cond dens are set in the mod file...

        insert LeakConductance  { gmax_LeakConductance = 2.5E-5 }  
//      Ion non_specific is used in this mechanism...


    }

}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1

}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}

proc connect2target() {   //$o1 target point process, $o2 returned NetCon


//  Using standard NetBuilder form. (Overly) simple assumption that first soma seg is trigger for AP...
//  Note: neuroConstruct does not use this func for creating connections (in serial mode!), but it can be useful when using generated files in NEURON's NetBuilder

    Soma $o2 = new NetCon(&v(1), $o1)
    print "connect2target called on ", name
}


//  This function is useful when checking what cells (aot sections) have been created. Run allcells() from nCtools.hoc...

proc toString() {
    strdef info
    sprint(info, "Cell ref: %s (%s), at: (%d, %d, %d)", reference, name, x, y, z)
    print info
}


//  This function is useful when checking network connections

proc netInfo() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s", reference, type)
    print "--------  ",info
    print "    There are ", synlist.count(), " connections in ", synlist
    for i=0,synlist.count()-1 {
        print "        Connection from ", synlist.o[i].precell, " to: ", synlist.o[i].postcell
        print "        Pre:   Weight: ", synlist.o[i].weight, ", delay: ", synlist.o[i].delay, ", threshold: ", synlist.o[i].threshold 
        print "        Post:  ", synlist.o[i].syn(), ", gmax: ", synlist.o[i].syn().gmax , ", e: ", synlist.o[i].syn().e , ", rise time: ", synlist.o[i].syn().tau_rise , ", decay time: ", synlist.o[i].syn().tau_decay 
    print " "
    }
    
    
    
    print "--------  "
    print " "
}


endtemplate M3L

