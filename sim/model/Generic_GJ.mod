COMMENT

   **************************************************
   File generated by: neuroConstruct v1.7.0 
   **************************************************

   This file holds the implementation in NEURON of the Cell Mechanism:
   Generic_GJ (Type: Gap junction, Model: Template based ChannelML file)

   with parameters: 
   /channelml/@units = Physiological Units 
   /channelml/notes = ChannelML file describing a single synaptic mechanism 
   /channelml/synapse_type/@name = Generic_GJ 
   /channelml/synapse_type/status/@value = in_progress 
   /channelml/synapse_type/status/contributor/name = Padraig Gleeson 
   /channelml/synapse_type/status/contributor/comment =  Note: This is not (yet) based on experimental data from C. elegans 
   /channelml/synapse_type/notes = Electrical connection from a cell. A generic GJ is used as a first approximation for all electrical connections 
   /channelml/synapse_type/electrical_syn/@conductance = 1.00E-9 

// File from which this was generated: C:\Users\Tom\Documents\research\OpenWorm\CElegansNeuroConstruct\CElegansNeuroML\CElegans\cellMechanisms\Generic_GJ\ElectSyn.xml

// XSL file with mapping to simulator: C:\Users\Tom\Documents\research\OpenWorm\CElegansNeuroConstruct\CElegansNeuroML\CElegans\cellMechanisms\Generic_GJ\ChannelML_v1.8.1_NEURONmod.xsl

ENDCOMMENT


?  This is a NEURON mod file generated from a ChannelML file

?  Unit system of original ChannelML file: Physiological Units

COMMENT
    ChannelML file describing a single synaptic mechanism
ENDCOMMENT

? Creating synaptic mechanism for an electrical synapse
    

TITLE Channel: Generic_GJ

COMMENT
    Electrical connection from a cell. A generic GJ is used as a first approximation for all electrical connections
ENDCOMMENT


UNITS {
    (nA) = (nanoamp)
    (mV) = (millivolt)
    (uS) = (microsiemens)
}

    
NEURON {
    POINT_PROCESS Generic_GJ
    NONSPECIFIC_CURRENT i
    RANGE g, i
    RANGE weight
    
    POINTER vgap  : Using a POINTER as opposed to RANGE for serial mode
        

}

PARAMETER {
    v (millivolt)
    vgap (millivolt)
    g = 0.0000010000000000000002 (microsiemens)
    weight = 1

}


ASSIGNED {
    i (nanoamp)
}

BREAKPOINT {
    i = weight * g * (v - vgap)
} 
