
//  ******************************************************
//
//     File generated by: neuroConstruct v1.7.0
//
//     Generally replicates hoc for Cell Type as exported from
//     NEURON's Cell Builder, together with some neuroConstruct
//     specific helper/info procedures, e.g. toString(), netInfo()
//
//  ******************************************************


begintemplate I1L

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target


//  Some fields for referencing the cells

public reference, type, description, name
strdef reference, type, description, name


//  Some methods for referencing the cells

public toString, netInfo

public all

objref synlist
objref all
objref stringFuncs

public soma_group
objref soma_group
public axon_group
objref axon_group
public dendrite_group
objref dendrite_group

proc init() {
    topol()
    subsets()
    geom()
    biophys()
    geom_nseg()
    synlist = new List()
    x = y = z = 0
    reference = $s1
    type = $s2
    description = $s3
    
    strdef indexNum
    stringFuncs = new StringFunctions()
    stringFuncs.tail(reference, "_", indexNum)
    while (stringFuncs.substr( indexNum, "_")>=0) {
        stringFuncs.tail(indexNum, "_", indexNum)
    }
    
    sprint(name, "%s", type)
}

create Soma
public Soma
create Axon
public Axon
create Dendrite2
public Dendrite2

proc topol() {
    connect Axon(0), Soma(1.0)
    connect Dendrite2(0), Soma(1.0)
    basic_shape()
}

proc basic_shape() {

//  Looking at segment number 0: Seg0_soma_0, section: Soma, SPHERICAL, ID: 0, ROOT SEGMENT, rad: 1.8445866, (2.8999999, -300.35, 53.149998) -> (2.8999999, -300.35, 53.149998)
    Soma {pt3dclear() pt3dadd(2.8999999, -302.19458, 53.149998, 3.6891732) pt3dadd(2.8999999, -298.50543, 53.149998, 3.6891732)}

//  Looking at segment number 1: Seg0_axon_0, section: Axon, ID: 1, parent: Seg0_soma_0 (0), rad: 0.28284273, (2.8999999, -300.35, 53.149998) -> (2.8999999, -299.0, 52.999996), len: 1.35831
    Axon {pt3dclear() pt3dadd(2.8999999, -300.35, 53.149998, 0.56568545) pt3dadd(2.8999999, -299.0, 52.999996, 0.56568545)}

//  Looking at segment number 2: Seg2_axon_0, section: Axon, ID: 2, parent: Seg0_axon_0 (1), rad: 0.21213202, (2.8999999, -299.0, 52.999996) -> (2.85, -297.5, 52.749996), len: 1.52151
    Axon {pt3dadd(2.85, -297.5, 52.749996, 0.42426404)}

//  Looking at segment number 3: Seg3_axon_0, section: Axon, ID: 3, parent: Seg2_axon_0 (2), rad: 0.21794495, (2.85, -297.5, 52.749996) -> (2.85, -288.65, 51.25), len: 8.97622
    Axon {pt3dadd(2.85, -288.65, 51.25, 0.4358899)}

//  Looking at segment number 4: Seg4_axon_0, section: Axon, ID: 4, parent: Seg3_axon_0 (3), rad: 0.20615529, (2.85, -288.65, 51.25) -> (2.85, -288.3, 51.4), len: 0.380795
    Axon {pt3dadd(2.85, -288.3, 51.4, 0.41231057)}

//  Looking at segment number 5: Seg5_axon_0, section: Axon, ID: 5, parent: Seg4_axon_0 (4), rad: 0.21213202, (2.85, -288.3, 51.4) -> (2.85, -288.15, 51.899998), len: 0.52201
    Axon {pt3dadd(2.85, -288.15, 51.899998, 0.42426404)}

//  Looking at segment number 6: Seg6_axon_0, section: Axon, ID: 6, parent: Seg5_axon_0 (5), rad: 0.2193741, (2.85, -288.15, 51.899998) -> (2.825, -288.05002, 53.7), len: 1.80295
    Axon {pt3dadd(2.825, -288.05002, 53.7, 0.4387482)}

//  Looking at segment number 7: Seg7_axon_0, section: Axon, ID: 7, parent: Seg6_axon_0 (6), rad: 0.20615529, (2.825, -288.05002, 53.7) -> (1.9, -287.94998, 55.199997), len: 1.76511
    Axon {pt3dadd(1.9, -287.94998, 55.199997, 0.41231057)}

//  Looking at segment number 8: Seg8_axon_0, section: Axon, ID: 8, parent: Seg7_axon_0 (7), rad: 0.225, (1.9, -287.94998, 55.199997) -> (0.875, -287.94998, 56.050003), len: 1.33159
    Axon {pt3dadd(0.875, -287.94998, 56.050003, 0.45)}

//  Looking at segment number 9: Seg9_axon_0, section: Axon, ID: 9, parent: Seg8_axon_0 (8), rad: 0.19685021, (0.875, -287.94998, 56.050003) -> (-0.625, -287.875, 56.65), len: 1.61729
    Axon {pt3dadd(-0.625, -287.875, 56.65, 0.39370042)}

//  Looking at segment number 10: Seg10_axon_0, section: Axon, ID: 10, parent: Seg9_axon_0 (9), rad: 0.17677669, (-0.625, -287.875, 56.65) -> (-1.375, -287.9, 56.675), len: 0.750833
    Axon {pt3dadd(-1.375, -287.9, 56.675, 0.35355338)}

//  Looking at segment number 11: Seg11_axon_0, section: Axon, ID: 11, parent: Seg10_axon_0 (10), rad: 0.20155643, (-1.375, -287.9, 56.675) -> (-1.625, -288.45, 56.75), len: 0.608806
    Axon {pt3dadd(-1.625, -288.45, 56.75, 0.40311286)}

//  Looking at segment number 12: Seg12_axon_0, section: Axon, ID: 12, parent: Seg11_axon_0 (11), rad: 0.15411034, (-1.625, -288.45, 56.75) -> (-1.575, -292.75, 57.525), len: 4.36956
    Axon {pt3dadd(-1.575, -292.75, 57.525, 0.30822068)}

//  Looking at segment number 13: Seg13_axon_0, section: Axon, ID: 13, parent: Seg12_axon_0 (12), rad: 0.18027757, (-1.575, -292.75, 57.525) -> (-1.4000001, -311.1, 58.749996), len: 18.3917
    Axon {pt3dadd(-1.4000001, -311.1, 58.749996, 0.36055514)}

//  Looking at segment number 14: Seg14_axon_0, section: Axon, ID: 14, parent: Seg13_axon_0 (13), rad: 0.19525623, (-1.4000001, -311.1, 58.749996) -> (-1.425, -311.3, 58.749996), len: 0.201538
    Axon {pt3dadd(-1.425, -311.3, 58.749996, 0.39051247)}

//  Looking at segment number 15: Seg0_dendrit_2, section: Dendrite2, ID: 15, parent: Seg0_soma_0 (0), rad: 0.28284273, (2.8999999, -300.35, 53.149998) -> (2.8999999, -301.69998, 53.3), len: 1.35828
    Dendrite2 {pt3dclear() pt3dadd(2.8999999, -300.35, 53.149998, 0.56568545) pt3dadd(2.8999999, -301.69998, 53.3, 0.56568545)}

//  Looking at segment number 16: Seg16_dendrite_0, section: Dendrite2, ID: 16, parent: Seg0_dendrit_2 (15), rad: 0.21794495, (2.8999999, -301.69998, 53.3) -> (2.85, -303.55002, 53.55), len: 1.86752
    Dendrite2 {pt3dadd(2.85, -303.55002, 53.55, 0.4358899)}

//  Looking at segment number 17: Seg17_dendrite_0, section: Dendrite2, ID: 17, parent: Seg16_dendrite_0 (16), rad: 0.21213202, (2.85, -303.55002, 53.55) -> (1.75, -325.0, 56.050003), len: 21.6232
    Dendrite2 {pt3dadd(1.75, -325.0, 56.050003, 0.42426404)}

//  Looking at segment number 18: Seg18_dendrite_0, section: Dendrite2, ID: 18, parent: Seg17_dendrite_0 (17), rad: 0.21213202, (1.75, -325.0, 56.050003) -> (0.05, -340.1, 57.95), len: 15.3137
    Dendrite2 {pt3dadd(0.05, -340.1, 57.95, 0.42426404)}

//  Looking at segment number 19: Seg19_dendrite_0, section: Dendrite2, ID: 19, parent: Seg18_dendrite_0 (18), rad: 0.18708287, (0.05, -340.1, 57.95) -> (0.05, -340.35, 58.0), len: 0.254951
    Dendrite2 {pt3dadd(0.05, -340.35, 58.0, 0.37416574)}

//  Looking at segment number 20: Seg20_dendrite_0, section: Dendrite2, ID: 20, parent: Seg19_dendrite_0 (19), rad: 0.23452078, (0.05, -340.35, 58.0) -> (0.05, -340.5, 57.95), len: 0.158108
    Dendrite2 {pt3dadd(0.05, -340.5, 57.95, 0.46904156)}

//  Looking at segment number 21: Seg21_dendrite_0, section: Dendrite2, ID: 21, parent: Seg20_dendrite_0 (20), rad: 0.16770509, (0.05, -340.5, 57.95) -> (0.2, -340.55, 57.825), len: 0.201553
    Dendrite2 {pt3dadd(0.2, -340.55, 57.825, 0.33541018)}

//  Looking at segment number 22: Seg22_dendrite_0, section: Dendrite2, ID: 22, parent: Seg21_dendrite_0 (21), rad: 0.16007811, (0.2, -340.55, 57.825) -> (0.4, -340.525, 57.9), len: 0.215058
    Dendrite2 {pt3dadd(0.4, -340.525, 57.9, 0.32015622)}

//  Looking at segment number 23: Seg23_dendrite_0, section: Dendrite2, ID: 23, parent: Seg22_dendrite_0 (22), rad: 0.19525623, (0.4, -340.525, 57.9) -> (0.5, -340.55, 58.025), len: 0.162018
    Dendrite2 {pt3dadd(0.5, -340.55, 58.025, 0.39051247)}

//  Looking at segment number 24: Seg24_dendrite_0, section: Dendrite2, ID: 24, parent: Seg23_dendrite_0 (23), rad: 0.21360008, (0.5, -340.55, 58.025) -> (0.65000004, -340.55, 58.375), len: 0.380787
    Dendrite2 {pt3dadd(0.65000004, -340.55, 58.375, 0.42720017)}

//  Looking at segment number 25: Seg25_dendrite_0, section: Dendrite2, ID: 25, parent: Seg24_dendrite_0 (24), rad: 0.20615529, (0.65000004, -340.55, 58.375) -> (0.5, -340.55, 58.899998), len: 0.546006
    Dendrite2 {pt3dadd(0.5, -340.55, 58.899998, 0.41231057)}

//  Looking at segment number 26: Seg26_dendrite_0, section: Dendrite2, ID: 26, parent: Seg25_dendrite_0 (25), rad: 0.21213202, (0.5, -340.55, 58.899998) -> (0.1, -340.55, 59.149998), len: 0.471699
    Dendrite2 {pt3dadd(0.1, -340.55, 59.149998, 0.42426404)}
}

proc subsets() { local i


//  The group all is assumed never to change
    all = new SectionList()


    soma_group = new SectionList()

    Soma soma_group.append()


    axon_group = new SectionList()

    Axon axon_group.append()


    dendrite_group = new SectionList()

    Dendrite2 dendrite_group.append()


    Soma all.append()
    Axon all.append()
    Dendrite2 all.append()
}

proc geom() {
}

proc biophys() {
    forsec all cm = 1.0
    forsec all Ra = 30.0

    forsec all { 
//      Assuming parameters other than max cond dens are set in the mod file...

        insert LeakConductance  { gmax_LeakConductance = 2.5E-5 }  
//      Ion non_specific is used in this mechanism...


    }

}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1

}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}

proc connect2target() {   //$o1 target point process, $o2 returned NetCon


//  Using standard NetBuilder form. (Overly) simple assumption that first soma seg is trigger for AP...
//  Note: neuroConstruct does not use this func for creating connections (in serial mode!), but it can be useful when using generated files in NEURON's NetBuilder

    Soma $o2 = new NetCon(&v(1), $o1)
    print "connect2target called on ", name
}


//  This function is useful when checking what cells (aot sections) have been created. Run allcells() from nCtools.hoc...

proc toString() {
    strdef info
    sprint(info, "Cell ref: %s (%s), at: (%d, %d, %d)", reference, name, x, y, z)
    print info
}


//  This function is useful when checking network connections

proc netInfo() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s", reference, type)
    print "--------  ",info
    print "    There are ", synlist.count(), " connections in ", synlist
    for i=0,synlist.count()-1 {
        print "        Connection from ", synlist.o[i].precell, " to: ", synlist.o[i].postcell
        print "        Pre:   Weight: ", synlist.o[i].weight, ", delay: ", synlist.o[i].delay, ", threshold: ", synlist.o[i].threshold 
        print "        Post:  ", synlist.o[i].syn(), ", gmax: ", synlist.o[i].syn().gmax , ", e: ", synlist.o[i].syn().e , ", rise time: ", synlist.o[i].syn().tau_rise , ", decay time: ", synlist.o[i].syn().tau_decay 
    print " "
    }
    
    
    
    print "--------  "
    print " "
}


endtemplate I1L

