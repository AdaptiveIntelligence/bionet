
//  ******************************************************
//
//     File generated by: neuroConstruct v1.7.0
//
//     Generally replicates hoc for Cell Type as exported from
//     NEURON's Cell Builder, together with some neuroConstruct
//     specific helper/info procedures, e.g. toString(), netInfo()
//
//  ******************************************************


begintemplate M1

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target


//  Some fields for referencing the cells

public reference, type, description, name
strdef reference, type, description, name


//  Some methods for referencing the cells

public toString, netInfo

public all

objref synlist
objref all
objref stringFuncs

public soma_group
objref soma_group
public axon_group
objref axon_group
public dendrite_group
objref dendrite_group

proc init() {
    topol()
    subsets()
    geom()
    biophys()
    geom_nseg()
    synlist = new List()
    x = y = z = 0
    reference = $s1
    type = $s2
    description = $s3
    
    strdef indexNum
    stringFuncs = new StringFunctions()
    stringFuncs.tail(reference, "_", indexNum)
    while (stringFuncs.substr( indexNum, "_")>=0) {
        stringFuncs.tail(indexNum, "_", indexNum)
    }
    
    sprint(name, "%s", type)
}

create Soma
public Soma
create Axon
public Axon
create Neurite2
public Neurite2
create Neurite3
public Neurite3

proc topol() {
    connect Axon(0), Soma(1.0)
    connect Neurite2(0), Axon(1.0)
    connect Neurite3(0), Axon(1.0)
    basic_shape()
}

proc basic_shape() {

//  Looking at segment number 0: Seg0_soma_0, section: Soma, SPHERICAL, ID: 0, ROOT SEGMENT, rad: 2.6841772, (-0.86700004, -252.135, 44.420002) -> (-0.86700004, -252.135, 44.420002)
    Soma {pt3dclear() pt3dadd(-0.86700004, -254.81917, 44.420002, 5.3683543) pt3dadd(-0.86700004, -249.45082, 44.420002, 5.3683543)}

//  Looking at segment number 1: Seg0_axon_0, section: Axon, ID: 1, parent: Seg0_soma_0 (0), rad: 0.48648947, (-0.86700004, -252.135, 44.420002) -> (-0.96699995, -252.135, 44.420002), len: 0.0999999
    Axon {pt3dclear() pt3dadd(-0.86700004, -252.135, 44.420002, 0.97297895) pt3dadd(-0.96699995, -252.135, 44.420002, 0.97297895)}

//  Looking at segment number 2: Seg2_axon_0, section: Axon, ID: 2, parent: Seg0_axon_0 (1), rad: 0.37336978, (-0.96699995, -252.135, 44.420002) -> (-0.48099998, -252.49901, 44.420002), len: 0.607208
    Axon {pt3dadd(-0.48099998, -252.49901, 44.420002, 0.74673957)}

//  Looking at segment number 3: Seg3_axon_0, section: Axon, ID: 3, parent: Seg2_axon_0 (2), rad: 0.37361476, (-0.48099998, -252.49901, 44.420002) -> (-0.085, -253.74, 44.420002), len: 1.30265
    Axon {pt3dadd(-0.085, -253.74, 44.420002, 0.7472295)}

//  Looking at segment number 4: Seg4_axon_0, section: Axon, ID: 4, parent: Seg3_axon_0 (3), rad: 0.37357864, (-0.085, -253.74, 44.420002) -> (-0.24900001, -258.952, 44.117), len: 5.22337
    Axon {pt3dadd(-0.24900001, -258.952, 44.117, 0.7471573)}

//  Looking at segment number 5: Seg5_axon_0, section: Axon, ID: 5, parent: Seg4_axon_0 (4), rad: 0.3734943, (-0.24900001, -258.952, 44.117) -> (-0.284, -277.864, 49.329002), len: 19.6171
    Axon {pt3dadd(-0.284, -277.864, 49.329002, 0.7469886)}

//  Looking at segment number 6: Seg6_axon_0, section: Axon, ID: 6, parent: Seg5_axon_0 (5), rad: 0.3737392, (-0.284, -277.864, 49.329002) -> (-0.242, -291.785, 54.97), len: 15.0205
    Axon {pt3dadd(-0.242, -291.785, 54.97, 0.7474784)}

//  Looking at segment number 7: Seg7_axon_0, section: Axon, ID: 7, parent: Seg6_axon_0 (6), rad: 0.3741938, (-0.242, -291.785, 54.97) -> (-0.251, -326.953, 59.309), len: 35.4347
    Axon {pt3dadd(-0.251, -326.953, 59.309, 0.7483876)}

//  Looking at segment number 8: Seg8_axon_0, section: Axon, ID: 8, parent: Seg7_axon_0 (7), rad: 0.9086501, (-0.251, -326.953, 59.309) -> (-1.224, -339.026, 59.713), len: 12.1189
    Axon {pt3dadd(-1.224, -339.026, 59.713, 1.8173002)}

//  Looking at segment number 9: Seg9_neurite_0, section: Neurite2, ID: 9, parent: Seg8_axon_0 (8), rad: 0.3872854, (-1.224, -339.026, 59.713) -> (-1.622, -339.022, 59.703), len: 0.398146
    Neurite2 {pt3dclear() pt3dadd(-1.224, -339.026, 59.713, 1.8173002) pt3dadd(-1.622, -339.022, 59.703, 0.7745708)}

//  Looking at segment number 10: Seg10_neurite_0, section: Neurite2, ID: 10, parent: Seg9_neurite_0 (9), rad: 0.18380697, (-1.622, -339.022, 59.703) -> (-1.585, -339.169, 59.773), len: 0.16697
    Neurite2 {pt3dadd(-1.585, -339.169, 59.773, 0.36761394)}

//  Looking at segment number 11: Seg11_neurite_0, section: Neurite2, ID: 11, parent: Seg10_neurite_0 (10), rad: 0.18304645, (-1.585, -339.169, 59.773) -> (-1.72, -340.011, 59.677), len: 0.858121
    Neurite2 {pt3dadd(-1.72, -340.011, 59.677, 0.3660929)}

//  Looking at segment number 12: Seg12_neurite_0, section: Neurite2, ID: 12, parent: Seg11_neurite_0 (11), rad: 0.1831502, (-1.72, -340.011, 59.677) -> (-1.7340001, -340.275, 59.249), len: 0.503069
    Neurite2 {pt3dadd(-1.7340001, -340.275, 59.249, 0.3663004)}

//  Looking at segment number 13: Seg13_neurite_0, section: Neurite2, ID: 13, parent: Seg12_neurite_0 (12), rad: 0.1833303, (-1.7340001, -340.275, 59.249) -> (-1.7449999, -340.115, 58.808), len: 0.46926
    Neurite2 {pt3dadd(-1.7449999, -340.115, 58.808, 0.3666606)}

//  Looking at segment number 14: Seg14_neurite_0, section: Neurite2, ID: 14, parent: Seg13_neurite_0 (13), rad: 0.18341756, (-1.7449999, -340.115, 58.808) -> (-1.774, -339.278, 58.313), len: 0.972827
    Neurite2 {pt3dadd(-1.774, -339.278, 58.313, 0.36683512)}

//  Looking at segment number 15: Seg15_neurite_0, section: Neurite3, ID: 15, parent: Seg8_axon_0 (8), rad: 0.6694782, (-1.224, -339.026, 59.713) -> (-1.0189999, -339.053, 59.591), len: 0.240081
    Neurite3 {pt3dclear() pt3dadd(-1.224, -339.026, 59.713, 1.8173002) pt3dadd(-1.0189999, -339.053, 59.591, 1.3389564)}

//  Looking at segment number 16: Seg16_neurite_0, section: Neurite3, ID: 16, parent: Seg15_neurite_0 (15), rad: 0.23549522, (-1.0189999, -339.053, 59.591) -> (-1.112, -339.295, 59.756), len: 0.307312
    Neurite3 {pt3dadd(-1.112, -339.295, 59.756, 0.47099045)}

//  Looking at segment number 17: Seg17_neurite_0, section: Neurite3, ID: 17, parent: Seg16_neurite_0 (16), rad: 0.2353147, (-1.112, -339.295, 59.756) -> (-1.131, -340.02298, 59.684998), len: 0.731668
    Neurite3 {pt3dadd(-1.131, -340.02298, 59.684998, 0.4706294)}

//  Looking at segment number 18: Seg18_neurite_0, section: Neurite3, ID: 18, parent: Seg17_neurite_0 (17), rad: 0.23583469, (-1.131, -340.02298, 59.684998) -> (-1.148, -340.282, 59.249), len: 0.507425
    Neurite3 {pt3dadd(-1.148, -340.282, 59.249, 0.47166938)}

//  Looking at segment number 19: Seg19_neurite_0, section: Neurite3, ID: 19, parent: Seg18_neurite_0 (18), rad: 0.23485315, (-1.148, -340.282, 59.249) -> (-1.1669999, -340.111, 58.767002), len: 0.511792
    Neurite3 {pt3dadd(-1.1669999, -340.111, 58.767002, 0.4697063)}

//  Looking at segment number 20: Seg20_neurite_0, section: Neurite3, ID: 20, parent: Seg19_neurite_0 (19), rad: 0.23456556, (-1.1669999, -340.111, 58.767002) -> (-1.192, -339.264, 58.315998), len: 0.959903
    Neurite3 {pt3dadd(-1.192, -339.264, 58.315998, 0.4691311)}
}

proc subsets() { local i


//  The group all is assumed never to change
    all = new SectionList()


    soma_group = new SectionList()

    Soma soma_group.append()


    axon_group = new SectionList()

    Axon axon_group.append()


    dendrite_group = new SectionList()

    Neurite2 dendrite_group.append()
    Neurite3 dendrite_group.append()


    Soma all.append()
    Axon all.append()
    Neurite2 all.append()
    Neurite3 all.append()
}

proc geom() {
}

proc biophys() {
    forsec all cm = 1.0
    forsec all Ra = 30.0

    forsec all { 
//      Assuming parameters other than max cond dens are set in the mod file...

        insert LeakConductance  { gmax_LeakConductance = 2.5E-5 }  
//      Ion non_specific is used in this mechanism...


    }

}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1

}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}

proc connect2target() {   //$o1 target point process, $o2 returned NetCon


//  Using standard NetBuilder form. (Overly) simple assumption that first soma seg is trigger for AP...
//  Note: neuroConstruct does not use this func for creating connections (in serial mode!), but it can be useful when using generated files in NEURON's NetBuilder

    Soma $o2 = new NetCon(&v(1), $o1)
    print "connect2target called on ", name
}


//  This function is useful when checking what cells (aot sections) have been created. Run allcells() from nCtools.hoc...

proc toString() {
    strdef info
    sprint(info, "Cell ref: %s (%s), at: (%d, %d, %d)", reference, name, x, y, z)
    print info
}


//  This function is useful when checking network connections

proc netInfo() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s", reference, type)
    print "--------  ",info
    print "    There are ", synlist.count(), " connections in ", synlist
    for i=0,synlist.count()-1 {
        print "        Connection from ", synlist.o[i].precell, " to: ", synlist.o[i].postcell
        print "        Pre:   Weight: ", synlist.o[i].weight, ", delay: ", synlist.o[i].delay, ", threshold: ", synlist.o[i].threshold 
        print "        Post:  ", synlist.o[i].syn(), ", gmax: ", synlist.o[i].syn().gmax , ", e: ", synlist.o[i].syn().e , ", rise time: ", synlist.o[i].syn().tau_rise , ", decay time: ", synlist.o[i].syn().tau_decay 
    print " "
    }
    
    
    
    print "--------  "
    print " "
}


endtemplate M1

